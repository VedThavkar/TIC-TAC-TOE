name: Build,Analyze,scan
on:
  push:
    branches:
      - main
jobs:
  build-analyze-scan:
    name: Build
    runs-on: [tic]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: npm-install dependencies
        run: npm install
      - name: Trivy file scan
        run: trivy fs . > trivyfs.txt

      - name: Docker Build and push
        run: |
          # Run commands to build and push Docker images
          docker build -t tic-tac-toe .
          docker tag tic-tac-toe vedantthavkar/tic-tac-toe:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push vedantthavkar/tic-tac-toe:latest
        env:
          DOCKER_CLI_ACI: 1

      - name: Image scan
        run: trivy image vedantthavkar/tic-tac-toe:latest > trivyimage.txt
      
  deploy:
    needs: build-analyze-scan
    runs-on: self-hosted # Use your self-hosted runner label here    
    steps:
      - name: Pull the Docker image
        run: docker pull vedantthavkar/tic-tac-toe:latest
      - name: Trivy image scan
        run: trivy image vedantthavkar/tic-tac-toe:latest # Add Trivy scan command here
      - name: Run the container
        run: docker run -d --name ticgame -p 3000:3000 vedantthavkar/tic-tac-toe:latest  
      
      - name: Update kubeconfig
        run: aws eks --region ap-south-1 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml
      
      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#jenkins'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
